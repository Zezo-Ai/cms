!function(){var e={d:function(s,n){for(var t in n)e.o(n,t)&&!e.o(s,t)&&Object.defineProperty(s,t,{enumerable:!0,get:n[t]})},o:function(e,s){return Object.prototype.hasOwnProperty.call(e,s)},r:function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},s={};!function(){"use strict";var n,t;e.r(s),e.d(s,{AssetIndexer:function(){return i}}),function(e){e[e.ACTIONREQUIRED=0]="ACTIONREQUIRED",e[e.ACTIVE=1]="ACTIVE",e[e.WAITING=2]="WAITING"}(n||(n={})),function(e){e.START="asset-indexes/start-indexing",e.STOP="asset-indexes/stop-indexing-session",e.PROCESS="asset-indexes/process-indexing-session",e.OVERVIEW="asset-indexes/indexing-session-overview",e.FINISH="asset-indexes/finish-indexing-session"}(t||(t={}));class i{constructor(e,s,t=3){this._currentIndexingSession=null,this._currentConnectionCount=0,this._tasksWaiting=[],this._priorityTasks=[],this._prunedSessionIds=[],this._currentlyReviewing=!1,this.intervalManager=null,this.indexingSessions={},this._maxConcurrentConnections=t,this.$indexingSessionTable=e,this.indexingSessions={};let i=0;for(const e of s){let s=this.createSessionFromModel(e);s.getSessionStatus()!==n.ACTIONREQUIRED||i||(i=s.getSessionId()),i||null!=this._currentIndexingSession||s.getSessionStatus()===n.ACTIONREQUIRED||(this._currentIndexingSession=s.getSessionId()),this.updateIndexingSessionData(s)}this._currentIndexingSession&&this.performIndexingStep()}get currentIndexingSession(){return this._currentIndexingSession}get currentSessionProgressInfo(){return null!==this._currentIndexingSession?this.indexingSessions[this._currentIndexingSession].getProgressInfo():null}updateIndexingSessionData(e){this.indexingSessions[e.getSessionId()]=e,this.renderIndexingSessionRow(e)}renderIndexingSessionRow(e){let s;if(void 0===e)return;if(!this.indexingSessions[e.getSessionId()]||this._prunedSessionIds.includes(e.getSessionId()))return this.$indexingSessionTable.find('tr[data-session-id="'+e.getSessionId()+'"]').remove(),void(0==this.$indexingSessionTable.find("tbody tr").length&&this.$indexingSessionTable.addClass("hidden"));s=e.getIndexingSessionRowHtml();const n=this.$indexingSessionTable.find('tr[data-session-id="'+e.getSessionId()+'"]');n.length>0?n.replaceWith(s):this.$indexingSessionTable.find("tbody").append(s),this.$indexingSessionTable.removeClass("hidden")}discardIndexingSession(e){const s=this.indexingSessions[e];delete this.indexingSessions[e],this._currentIndexingSession===e&&(this._currentIndexingSession=null),this.renderIndexingSessionRow(s),this.runTasks()}processFailureResponse(e){const s=e.data;this._currentConnectionCount--,this._updateCurrentIndexingSession(),Craft.cp.displayError(s.message),s.stop&&this.discardIndexingSession(s.stop),this.runTasks()}processSuccessResponse(e){const s=e.data;if(this._currentConnectionCount--,s.session){const e=this.createSessionFromModel(s.session);this.indexingSessions[e.getSessionId()]=e,this.renderIndexingSessionRow(e),this._updateCurrentIndexingSession(),e.getSessionStatus()!==n.ACTIONREQUIRED||s.skipDialog?this._prunedSessionIds.includes(this._currentIndexingSession)?this.runTasks():this.performIndexingStep():this._prunedSessionIds.includes(this._currentIndexingSession)?this.runTasks():this.reviewSession(e)}this._updateCurrentIndexingSession(),s.stop&&this.discardIndexingSession(s.stop)}getReviewData(e){const s={sessionId:e.getSessionId(),action:t.OVERVIEW,params:{sessionId:e.getSessionId()},callback:()=>{this.renderIndexingSessionRow(e)}};this.enqueueTask(s)}reviewSession(e){if(this._currentlyReviewing)return;this._currentlyReviewing=!0,this.pruneWaitingTasks(e.getSessionId());let s=$("<div></div>");const n=e.getMissingEntries(),i=n.files?Object.entries(n.files):[],o=n.folders?Object.entries(n.folders):[],r=e.getSkippedEntries();if(r.length){let e="";for(const s of r)e+=`<li>${Craft.escapeHtml(s)}</li>`;s.append(`\n                <h2>${Craft.t("app","Skipped files")}</h2>\n                <p>${Craft.t("app","The following items were not indexed.")}</p>\n                <ul>\n                    ${e}\n                </ul>\n            `)}const a=i.length||o.length;if(a){if(o.length){let n="";for(const[e,s]of o)n+=`<li><label><input type="checkbox" checked="checked" name="deleteFolder[]" value="${e}"> ${Craft.escapeHtml(s)}</label></li>`;const t={items:"folders"};let i=this._getMissingItemsHeading("folders",t,e),r=this._getMissingItemsCopy("folders",t,e);s.append($(`\n                <h2>${i}</h2>\n                <p>${r}</p>\n                <ul>\n                    ${n}\n                </ul>\n            `))}if(i.length){let n="";for(const[e,s]of i)n+=`<li><label><input type="checkbox" checked="checked" name="deleteAsset[]" value="${e}"> ${Craft.escapeHtml(s)}</label></li>`;const t={items:"files"};let o=this._getMissingItemsHeading("files",t,e),r=this._getMissingItemsCopy("files",t,e);s.append($(`\n                <h2>${o}</h2>\n                <p>${r}</p>\n                <ul>\n                    ${n}\n                </ul>\n            `))}}const d=$('<form class="modal fitted confirmmodal"/>').appendTo(Garnish.$bod),g=$('<div class="body"/>').appendTo(d).html(s.html()),l=$('<footer class="footer"/>').appendTo(d),c=$('<div class="buttons right"/>').appendTo(l),u=new Garnish.Modal(d,{hideOnEsc:!1,hideOnShadeClick:!1,onHide:()=>{this._currentlyReviewing=!1}});a?($("<button/>",{type:"button",class:"btn",text:Craft.t("app","Keep them")}).on("click",(s=>{s.preventDefault(),this.stopIndexingSession(e),u.hide()})).appendTo(c),$("<button/>",{type:"submit",class:"btn submit",text:Craft.t("app","Delete them")}).appendTo(c)):$("<button/>",{type:"submit",class:"btn submit",text:Craft.t("app","OK")}).appendTo(c),Craft.initUiElements(g),u.updateSizeAndPosition(),d.on("submit",(s=>{s.preventDefault(),u.hide();const n=Garnish.getPostData(g),i=Craft.expandPostArray(n);i.sessionId=e.getSessionId();const o={sessionId:e.getSessionId(),action:t.FINISH,params:i};this.enqueueTask(o,!0)}))}_getMissingItemsHeading(e,s,n){let t=Craft.t("app","Missing {items}",s);return"folders"==e&&n.getListEmptyFolders()&&(t=Craft.t("app","Missing or empty {items}",s)),t}_getMissingItemsCopy(e,s,n){let t=Craft.t("app","The following {items} could not be found. Should they be deleted from the index?",s);return"folders"==e&&n.getListEmptyFolders()&&(t=Craft.t("app","The following {items} could not be found or are empty. Should they be deleted from the index?",s)),t}startIndexing(e,s){Craft.sendActionRequest("POST",t.START,{data:e}).then((e=>this.processSuccessResponse(e))).catch((({response:e})=>this.processFailureResponse(e))).finally((()=>s())),this.intervalManager=new Craft.IntervalManager({onInterval:()=>{console.log("hello")}})}performIndexingStep(){if(this._currentIndexingSession||this._updateCurrentIndexingSession(),!this._currentIndexingSession)return;const e=this.indexingSessions[this._currentIndexingSession],s=this._maxConcurrentConnections-this._currentConnectionCount;for(let n=0;n<Math.min(s,e.getEntriesRemaining());n++){const s={sessionId:e.getSessionId(),action:t.PROCESS,params:{sessionId:this._currentIndexingSession}};this.enqueueTask(s)}if(e.getProcessIfRootEmpty()){const s={sessionId:e.getSessionId(),action:t.PROCESS,params:{sessionId:this._currentIndexingSession}};this.enqueueTask(s)}}stopIndexingSession(e){this.pruneWaitingTasks(e.getSessionId());const s={sessionId:e.getSessionId(),action:t.STOP,params:{sessionId:e.getSessionId()}};this.enqueueTask(s,!0)}pruneWaitingTasks(e){const s=[];let n=!1;this._prunedSessionIds.push(e);for(const t of this._tasksWaiting)t.sessionId!==e?s.push(t):n=!0;n&&(this._tasksWaiting=s)}enqueueTask(e,s=!1){s?this._priorityTasks.push(e):this._tasksWaiting.push(e),this.runTasks()}runTasks(){if(!(this._tasksWaiting.length+this._priorityTasks.length===0||this._currentConnectionCount>=this._maxConcurrentConnections))for(;this._tasksWaiting.length+this._priorityTasks.length!==0&&this._currentConnectionCount<this._maxConcurrentConnections;){this._currentConnectionCount++;const e=this._priorityTasks.length>0?this._priorityTasks.shift():this._tasksWaiting.shift();Craft.sendActionRequest("POST",e.action,{data:e.params}).then((e=>this.processSuccessResponse(e))).catch((({response:e})=>this.processFailureResponse(e))).finally((()=>{e.callback&&e.callback()}))}}_updateCurrentIndexingSession(){for(const e of Object.values(this.indexingSessions))if(e.getSessionStatus()!==n.ACTIONREQUIRED)return void(this._currentIndexingSession=e.getSessionId())}createSessionFromModel(e){return new o(e,this)}}class o{constructor(e,s){this.indexingSessionData=e,this.indexer=s}getSessionId(){return this.indexingSessionData.id}getProcessIfRootEmpty(){return this.indexingSessionData.processIfRootEmpty}getListEmptyFolders(){return this.indexingSessionData.listEmptyFolders}getProgressInfo(){return`${this.indexingSessionData.processedEntries} / ${this.indexingSessionData.totalEntries}`}getEntriesRemaining(){return this.indexingSessionData.totalEntries-this.indexingSessionData.processedEntries}getSessionStatus(){return this.indexingSessionData.actionRequired?n.ACTIONREQUIRED:this.indexer.currentIndexingSession===this.indexingSessionData.id?n.ACTIVE:n.WAITING}getIndexingSessionRowHtml(){const e=$('<tr class="indexingSession" data-session-id="'+this.getSessionId()+'">'),s=$("<td/>").appendTo(e),n=$("<ul/>").appendTo(s);for(const e of Object.values(this.indexingSessionData.indexedVolumes))$("<li/>",{text:e}).appendTo(n);e.append("<td>"+this.indexingSessionData.dateCreated+"</td>");const t=$('<td class="progress"><div class="progressContainer"></div></td>').css("position","relative"),i=new Craft.ProgressBar(t.find(".progressContainer"),!1,{announceProgress:!1});i.setItemCount(this.indexingSessionData.totalEntries),i.setProcessedItemCount(this.indexingSessionData.processedEntries),i.updateProgressBar(),i.showProgressBar(),t.data("progressBar",i),t.find(".progressContainer").append(`<div class="progressInfo">${this.getProgressInfo()}</div>`),e.append(t),e.append("<td>"+this.getSessionStatusMessage()+"</td>");const o=this.getActionButtons();return $("<td></td>").append(o).appendTo(e),e}getActionButtons(){const e=$('<div class="buttons"></div>');if(this.getSessionStatus()==n.ACTIONREQUIRED){const s=Craft.t("app","Review");e.append($("<button />",{type:"button",class:"btn submit",title:s,"aria-label":s}).text(s).on("click",(e=>{const s=$(e.target).parent();s.hasClass("disabled")||(s.addClass("disabled"),this.indexer.getReviewData(this))})))}const s=Craft.t("app","Discard");return e.append($("<button />",{type:"button",class:"btn submit",title:s,"aria-label":s}).text(s).on("click",(s=>{e.hasClass("disabled")||(e.addClass("disabled"),this.indexer.stopIndexingSession(this))}))),e}getSessionStatusMessage(){switch(this.getSessionStatus()){case n.ACTIONREQUIRED:return Craft.t("app","Waiting for review");case n.ACTIVE:return Craft.t("app","Active");case n.WAITING:return Craft.t("app","Waiting")}}getMissingEntries(){return this.indexingSessionData.missingEntries}getSkippedEntries(){return this.indexingSessionData.skippedEntries}}}();var n=Craft="undefined"==typeof Craft?{}:Craft;for(var t in s)n[t]=s[t];s.__esModule&&Object.defineProperty(n,"__esModule",{value:!0})}();
//# sourceMappingURL=AssetIndexer.js.map