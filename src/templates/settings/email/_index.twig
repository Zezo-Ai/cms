{% requireAdmin '0' %}

{% extends '_layouts/cp.twig' %}

{% set title = 'Email Settings'|t('app') %}

{% if readOnly is not defined %}
    {% set readOnly = not craft.app.config.general.allowAdminChanges %}
{% endif %}

{% set fullPageForm = not readOnly %}

{% set crumbs = [
    { label: "Settings"|t('app'), url: url('settings') }
] %}

{% set formActions = [
    {
        label: 'Save and continue editing'|t('app'),
        redirect: 'settings/email'|hash,
        shortcut: true,
        retainScroll: true,
    },
] %}

{% import '_includes/forms.twig' as forms %}

{% do view.registerTranslations('app', [
    "Email sent successfully! Check your inbox.",
]) %}


{% if settings is not defined %}
    {% set settings = craft.app.projectConfig.get('email') %}
    {% set freshSettings = true %}
{% else %}
    {% set freshSettings = false %}
{% endif %}


{% if readOnly %}
    {% set contentNotice = craft.cp.allowAdminChangesReadOnlyNotice() %}
{% endif %}

{% block content %}
    {% if customMailerFiles|length %}
        <div class="readable">
            <blockquote class="note warning">
                <p>
                    {{ 'It looks like these settings are being overridden by {paths}.'|t('app', {
                        paths: customMailerFiles|join(', ')
                    }) }}
                </p>
            </blockquote>
        </div>
        <hr>
    {% endif %}

    {% if not readOnly %}
        {{ actionInput('system-settings/save-email-settings') }}
        {{ redirectInput('settings') }}
    {% endif %}

    {{ forms.autosuggestField({
        first: true,
        label: "System Email Address"|t('app'),
        instructions: "The email address Craft CMS will use when sending email."|t('app'),
        id: 'fromEmail',
        name: 'fromEmail',
        suggestEnvVars: true,
        value: settings.fromEmail,
        autofocus: true,
        required: true,
        errors: (freshSettings ? null : settings.getErrors('fromEmail')),
        disabled: readOnly,
    }) }}

    {{ forms.autosuggestField({
        first: true,
        label: 'Reply-To Address'|t('app'),
        instructions: 'The Reply-To email address Craft CMS should use when sending email.'|t('app'),
        id: 'replyToEmail',
        name: 'replyToEmail',
        suggestEnvVars: true,
        value: settings.replyToEmail,
        errors: (freshSettings ? null : settings.getErrors('replyToEmail')),
        disabled: readOnly,
    }) }}

    {{ forms.autosuggestField({
        label: "Sender Name"|t('app'),
        instructions: "The “From” name Craft CMS will use when sending email."|t('app'),
        id: 'fromName',
        name: 'fromName',
        suggestEnvVars: true,
        value: settings.fromName,
        required: true,
        errors: (freshSettings ? null : settings.getErrors('fromName')),
        disabled: readOnly,
    }) }}

    {% if CraftEdition >= CraftPro %}
        {{ forms.autosuggestField({
            label: "HTML Email Template"|t('app'),
            instructions: "The template Craft CMS will use for HTML emails"|t('app'),
            id: 'template',
            name: 'template',
            suggestions: craft.cp.getTemplateSuggestions(),
            suggestEnvVars: true,
            value: settings.template,
            errors: (freshSettings ? null : settings.getErrors('template')),
            disabled: readOnly,
        }) }}
    {% endif %}

    <hr>

    {{ forms.selectField({
        label: "Transport Type"|t('app'),
        instructions: "How should Craft CMS send the emails?"|t('app'),
        id: 'transportType',
        name: 'transportType',
        options: transportTypeOptions,
        value: className(adapter),
        errors: adapter.getErrors('type') ?? null,
        toggle: true,
        disabled: readOnly,
    }) }}


    {% for _adapter in allTransportAdapters %}
        {% set isCurrent = (className(_adapter) == className(adapter)) %}
        {% set classes = [] %}
        {% if not isCurrent %}
            {% set classes = classes|merge(['hidden']) %}
        {% endif %}
        {% if readOnly %}
            {% set classes = classes|merge(['disabled']) %}
        {% endif %}

        {# Craft's transport adapters are set to show disabled fields when admin changes are not allowed,
           but we need to add a 'disabled' class here for external adapters, so that their fields are not accidentally editable #}
        <div id="{{ className(_adapter)|id }}" {% if classes|length %}class="{{ classes|join(' ') }}"{% endif %}>
            {% namespace 'transportTypes['~className(_adapter)|id~']' %}
                {{ (isCurrent ? adapter : _adapter).getSettingsHtml()|raw }}
            {% endnamespace %}
        </div>
    {% endfor %}

    {% if not readOnly %}
        <hr>

        <div class="buttons">
            <button type="button" id="test" class="btn formsubmit" data-action="system-settings/test-email-settings">{{ "Test"|t('app') }}</button>
        </div>
    {% endif %}
{% endblock %}
